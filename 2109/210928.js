// Remove Palindromic Subsequences

// You are given a string s consisting only of letters 'a' and 'b'.
// In a single step you can remove one palindromic subsequence from s.
// Return the minimum number of steps to make the given string empty.
// A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order.
// Note that a subsequence does not necessarily need to be contiguous.
// A string is called palindrome if is one that reads the same backward as well as forward.

// Example:
// Input: s = "ababa"
// Output: 1
// Explanation: s is already a palindrome, so its entirety can be removed in a single step.

/**
 * @param {string} s
 * @return {number}
 */
var removePalindromeSub = function (s) {
  if (!s) return 0;
  for (let i = 0, j = s.length - 1; i < j; i++, j--) {
    if (s[i] !== s[j]) return 2;
  }
  return 1;
};
// 쉽게 풀어낼 아이디어가 전혀 떠오르지 않음, discuss 참조
// 이 문제의 트릭은 회문이면 1, 아니면 2라고 고정되어 있다는 점
// 따라서 회문이 아닌 순간 답은 무조건 2이며, 회문이면 1이라서 회문 여부만 판단하면 됨
